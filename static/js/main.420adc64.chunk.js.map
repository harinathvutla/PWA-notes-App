{"version":3,"sources":["components/atoms/Heading.js","components/atoms/SearchNotes.js","components/organisms/Header.js","components/molecules/Markdown.js","components/molecules/SidebarNotes.js","components/pages/Notepad.js","App.js","serviceWorker.js","store/notesReducer.js","store/searchReducer.js","index.js"],"names":["Heading5","styled","h5","prop","fontsize","color","Heading","props","console","log","children","SearchStyle","Search","SearchNotes","timerId","isLoading","useSelector","state","searchReducer","resultsCount","dispatch","useDispatch","setLoading","val","type","setSearchValue","value","loading","onSearchChange","e","debFunc","clearTimeout","setTimeout","size","results","title","ButtonStyle","Button","IconStyle","Icon","HeaderWrapper","div","Header","width","height","onClick","name","Markdown","source","input","ButtonsWrapper","MarkdownWrapper","SidebarNotes","useState","edit","setEdit","notes","notesReducer","currentNote","searchValue","handleChange","event","note","target","noteText","useEffect","localStorage","setItem","JSON","stringify","Sidebar","Pushable","as","Segment","style","border","Menu","icon","vertical","visible","notesLocal","undefined","filter","includes","length","map","selected","id","Item","key","currentNoteId","backgroundColor","date","slice","renderNotes","Pusher","basic","Form","maxWidth","TextArea","placeholder","onChange","notesTextDisplay","Notepad","App","className","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","parse","getItem","action","Date","now","toDateString","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","convertedVapidKey","base64String","base64","repeat","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","urlBase64ToUint8Array","active","pushManager","subscribe","userVisibleOnly","applicationServerKey","showNotification","body"],"mappings":"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","file":"static/js/main.420adc64.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Heading5 = styled.h5`\n\tfont-size: ${prop => (prop.fontsize ? prop.fontsize : 'black')};\n\tcolor: ${prop => (prop.color ? prop.color : '10px')};\n\tpadding: 10px 20px;\n\tmargin: auto 0 !important;\n`;\nconst Heading = props => {\n\tconsole.log(props);\n\treturn (\n\t\t<Heading5 color={props.color} fontsize={props.fontsize}>\n\t\t\t{props.children}\n\t\t</Heading5>\n\t);\n};\n\nexport default Heading;\n","import React from 'react';\nimport { Search } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst SearchStyle = styled(Search)`\n\tmargin: 15px !important;\n\tpadding: 10px !important;\n\tcolor: teal;\n\t.search.icon {\n\t\tcolor: teal;\n\t\tfont-weight: 900;\n\t}\n\t.prompt {\n\t\tborder-color: teal !important;\n\t}\n\tinput {\n\t\twidth: 300px;\n\t}\n`;\n\nconst SearchNotes = props => {\n\n\tconst isLoading = useSelector(state => state.searchReducer.isLoading);\n\tconst resultsCount = useSelector(state => state.searchReducer.resultsCount);\n\tconst dispatch = useDispatch();\n\n\tconst setLoading = val => dispatch({ type: 'SET_LOADING', val: val });\n\tconst setSearchValue = value => dispatch({ type: 'SEARCH', value: value });\n\n\tlet timerId;\n\tconst debounce = (debFunc, val, time) => {\n\t\ttimerId = setTimeout(() => {\n\t\t\tdebFunc(val);\n\t\t\tsetLoading(false);\n\t\t}, time);\n\t};\n\n\tconst handleSearchChange = (e, { value }) => {\n\t\tsetLoading(true);\n\t\tclearTimeout(timerId);\n\t\tdebounce(setSearchValue, value, 500);\n\t};\n\n\treturn (\n\t\t<SearchStyle\n\t\t\tloading={isLoading}\n\t\t\tonSearchChange={handleSearchChange}\n\t\t\tsize='big'\n\t\t\tresults={[\n\t\t\t\t{\n\t\t\t\t\ttitle: props.isLoading\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: resultsCount\n\t\t\t\t\t\t? resultsCount + ' results found'\n\t\t\t\t\t\t: '0 results found',\n\t\t\t\t},\n\t\t\t]}\n\t\t/>\n\t);\n};\n\nexport default SearchNotes;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Icon, Button } from 'semantic-ui-react';\nimport Heading from '../atoms/Heading';\nimport SearchNotes from '../atoms/SearchNotes';\nimport { useDispatch } from 'react-redux';\n\nconst ButtonStyle = styled(Button)`\n\tmargin: 15px !important;\n\tpadding: 10px !important;\n\tbackground: white !important;\n`;\n\nconst IconStyle = styled(Icon)`\n\tmargin: 0px !important;\n`;\n\nconst HeaderWrapper = styled.div`\n\tdisplay: flex;\n`;\n\nconst Header = () => {\n\tconst dispatch = useDispatch();\n\tconst onCreateNote = () => dispatch({ type: 'CREATE_NOTE' });\n    const onDeleteNote = () => dispatch({ type: 'DELETE_NOTE' });\n\treturn (\n\t\t<HeaderWrapper>\n\t\t\t<Heading color='teal' fontsize='15px'>\n\t\t\t\tHari's Notepad\n\t\t\t</Heading>\n\t\t\t<ButtonStyle width='100px' height='50px' onClick={onCreateNote}>\n\t\t\t\t<IconStyle name='edit outline' size='big' color='teal' />\n\t\t\t</ButtonStyle>\n\t\t\t<ButtonStyle width='60px' height='40px' onClick={onDeleteNote}>\n\t\t\t\t<IconStyle name='trash alternate' size='big' color='teal' />\n\t\t\t</ButtonStyle>\n\t\t\t<SearchNotes></SearchNotes>\n\t\t</HeaderWrapper>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nconst Markdown = props => {\n\treturn <ReactMarkdown source={props.input} />;\n};\n\nexport default Markdown;\n","import React, {useState, useEffect} from 'react';\nimport { Menu, Segment, Sidebar, Form, TextArea, Button } from 'semantic-ui-react';\nimport Markdown from '../molecules/Markdown';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nconst ButtonsWrapper = styled.div`\ndisplay: flex;\njustify-content: flex-end;\n.ui.button {\n\tbackground-color: teal;\n\tcolor: white;\n}\nmargin-right: 20px;\nmargin-top: 20px;\n`;\n\nconst MarkdownWrapper = styled.div`\n\theight: 75vh !important;\n\twidth: 100% !important;\n\t*{\n\t\tmargin: 0;\n\t}\n`;\n\nconst SidebarNotes = () => {\n\n\tconst [edit, setEdit] = useState(false);\n\n\tconst notes = useSelector(state => state.notesReducer.notes);\n\tconst currentNote = useSelector(state => state.notesReducer.currentNote);\n\tconst searchValue = useSelector(state => state.searchReducer.searchValue);\n\tconst dispatch = useDispatch();\n\n\tconst setCurrentNote = id => dispatch({ type: 'CURRENT_NOTE', currentNoteId: id });\n\tconst setNoteText = note => dispatch({ type: 'NOTE_TEXT', noteText: note });\n\tconst setResultsCount = resultsCount => dispatch({ type: 'RESULTS', resultsCount: resultsCount });\n\n\tconst handleChange = event => {\n\t\tsetNoteText(event.target.value);\n\t\tconsole.log(event.target.value);\n\t};\n\n\t useEffect(() => {\n\t\tlocalStorage.setItem('notes',JSON.stringify(notes));\n\t\tlocalStorage.setItem('currentNote',JSON.stringify(currentNote));\n\t}, [notes, currentNote]); \n\n\tconst renderNotes = () => {\n\t\tlet notesLocal;\n\t\tif (searchValue === '' || searchValue === undefined) {\n\t\t\tnotesLocal = notes;\n\t\t} else {\n\t\t\tnotesLocal = notes?.filter(note =>\n\t\t\t\tnote.value.includes(searchValue),\n\t\t\t);\n\n\t\t\tsetResultsCount(notesLocal.length);\n\t\t}\n\n\t\treturn notesLocal.map(note => {\n\t\t\tconst selected =\n\t\t\t\tnote?.id === currentNote ? 'rgba(0, 168, 168, 0.25)' : 'white';\n\t\t\tconsole.log(selected);\n\t\t\treturn (\n\t\t\t\t<Menu.Item\n\t\t\t\t\tas='a'\n\t\t\t\t\tkey={note?.id}\n\t\t\t\t\tonClick={() => setCurrentNote(note.id)}\n\t\t\t\t\tstyle={{ backgroundColor: selected }}\n\t\t\t\t>\n\t\t\t\t\t<p>{note?.date}</p>\n\t\t\t\t\t{console.log(note?.date)}\n\t\t\t\t\t<p>{note?.value.slice(0, 10)}</p>\n\t\t\t\t</Menu.Item>\n\t\t\t);\n\t\t});\n\t};\n\n\tconst showEdit = () => {\n\t\tif(edit)\n\t\t{\n\t\t\tsetEdit(false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetEdit(true);\n\t\t}\n\t}\n\n\tconst notesTextDisplay = () => {\n\t\tif(edit)\n\t\t{\n\t\t\treturn (<TextArea\n\t\t\t\tstyle= {{height: \"80vh\", width: \"100%\"}}\n\t\t\t\t\tplaceholder={\n\t\t\t\t\t\tnotes.length ? 'Start writing your note...' : ''\n\t\t\t\t\t}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={\n\t\t\t\t\t\tnotes?.filter(note => note.id === currentNote)[0]\n\t\t\t\t\t\t\t?.value ?? ''\n\t\t\t\t\t}\n\t\t\t\t/>);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn (\n\t\t\t\t<MarkdownWrapper>\n\t\t\t\t\t<Markdown\n\t\t\t\t\t\tinput={\n\t\t\t\t\t\t\tnotes?.filter(note => note.id === currentNote)[0]?.value ?? ''\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</MarkdownWrapper>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Sidebar.Pushable as={Segment} style={{border: \"solid 1px teal\"}}>\n\t\t\t<Sidebar as={Menu} icon='labeled' vertical visible={true} width='thin' \n\t\t\tstyle={{border: \"0px\"}}\n\t\t\t>\n\t\t\t\t{renderNotes()}\n\t\t\t</Sidebar>\n\t\t\t<Sidebar.Pusher>\n\t\t\t\t<Segment basic>\n\t\t\t\t\t<Form style={{maxWidth: \"85%\"}}>\n\t\t\t\t\t\t{notesTextDisplay()}\n\t\t\t\t\t\t<ButtonsWrapper>\n\t\t\t\t\t\t\t<Button onClick={()=>showEdit()}>{edit?'Save':'Edit'}</Button>\n\t\t\t\t\t\t</ButtonsWrapper>\n\t\t\t\t\t</Form>\n\t\t\t\t</Segment>\n\t\t\t</Sidebar.Pusher>\n\t\t</Sidebar.Pushable>\n\t);\n};\n\nexport default SidebarNotes;\n","import React from 'react';\nimport Header from '../organisms/Header';\nimport SidebarNotes from '../molecules/SidebarNotes';\nconst Notepad = () => {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<SidebarNotes></SidebarNotes>\n\t\t</>\n\t);\n};\n\nexport default Notepad;\n","import React from 'react';\nimport Notepad from './components/pages/Notepad';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Notepad />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t\t),\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.',\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","const initialState = {\n\tnotes: JSON.parse(localStorage.getItem('notes'))??[],\n\tcurrentNote: JSON.parse(localStorage.getItem('currentNote'))??'',\n};\n\nconst notesReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase 'CREATE_NOTE':\n\t\t\tlet id = Date.now();\n\t\t\tconsole.log('create note');\n\t\t\tconsole.log({\n\t\t\t\t...state,\n\t\t\t\tnotes: [\n\t\t\t\t\t...state.notes,\n\t\t\t\t\t{ id: id, value: '', date: new Date().toDateString() },\n\t\t\t\t],\n\t\t\t\tcurrentNote: id,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotes: [\n\t\t\t\t\t...state.notes,\n\t\t\t\t\t{ id: id, value: '', date: new Date().toDateString() },\n\t\t\t\t],\n\t\t\t\tcurrentNote: id,\n\t\t\t};\n\t\tcase 'NOTE_TEXT':\n\t\t\tconsole.log({\n\t\t\t\t...state,\n\t\t\t\tnotes: state.notes.map(note =>\n\t\t\t\t\tnote.id === state.currentNote\n\t\t\t\t\t\t? { ...note, value: action.noteText }\n\t\t\t\t\t\t: note,\n\t\t\t\t),\n\t\t\t});\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotes: state.notes.map(note =>\n\t\t\t\t\tnote.id === state.currentNote\n\t\t\t\t\t\t? { ...note, value: action.noteText }\n\t\t\t\t\t\t: note,\n\t\t\t\t),\n\t\t\t};\n\t\tcase 'CURRENT_NOTE':\n\t\t\tconsole.log(action.currentNoteId);\n\t\t\treturn { ...state, currentNote: action.currentNoteId };\n\t\tcase 'DELETE_NOTE':\n\t\t\tconsole.log('delete note');\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotes: state.notes.filter(note => note.id !== state.currentNote),\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default notesReducer;\n","const initialState = {};\n\nconst searchReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase 'SEARCH':\n\t\t\tconsole.log('search reducer', action.value);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchValue: action.value,\n\t\t\t};\n\t\tcase 'RESULTS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresultsCount: action.resultsCount,\n\t\t\t};\n\t\tcase 'SET_LOADING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: action.val,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default searchReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport notesReducer from '../src/store/notesReducer';\nimport searchReducer from '../src/store/searchReducer';\n\nconst rootReducer = combineReducers({notesReducer, searchReducer});\n\nconst store = createStore(\n\trootReducer,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n/*  function notifyMe() {\n\tif (!(\"Notification\" in window)) {\n\t  alert(\"This browser does not support system notifications\");\n\t}\n\telse if (Notification.permission === \"granted\") {\n\t\tconsole.log('granted');\n\t  notify();\n\t}\n\telse if (Notification.permission !== 'denied') {\n\t  Notification.requestPermission().then(function (permission) {\n\t\tif (permission === \"granted\") {\n\t\t\tconsole.log(permission);\n\t\t  notify();\n\t\t}\n\t  });\n\t}\n\t\n\tfunction notify() {\n\t  let notification = new Notification('TITLE OF NOTIFICATION');\n \n\t}\n  \n  }\n  notifyMe();  */\n\n  function urlBase64ToUint8Array(base64String) {\n\tconst padding = '='.repeat((4 - base64String.length % 4) % 4);\n\tconst base64 = (base64String + padding)\n\t  .replace(/-/g, '+')\n\t  .replace(/_/g, '/');\n   \n\tconst rawData = window.atob(base64);\n\tconst outputArray = new Uint8Array(rawData.length);\n   \n\tfor (let i = 0; i < rawData.length; ++i) {\n\t  outputArray[i] = rawData.charCodeAt(i);\n\t}\n\treturn outputArray;\n  } \n\n  const vapidPublicKey = \"BImYznJgvAQVQkKk_o7xnkEoUmGx8g6kVh7hT8rpt_0oJX7pkVrM1q1QXivTn6JRarWnrYHwT_EHwMLCMd-kUJE\";\n  const convertedVapidKey = urlBase64ToUint8Array(vapidPublicKey); \n\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n    \t.then(function(registration) {\n      \t\tconsole.log('A service worker is active:', registration.active);\n\t  \t\tconsole.log('registration', registration);\n      \t\t// At this point, you can call methods that require an active\n\t  \t\t// service worker, like registration.pushManager.subscribe()\n\t  \t\treturn registration.pushManager.subscribe({\n\t\t\t\tuserVisibleOnly: true,\n\t\t\t\tapplicationServerKey: convertedVapidKey\n\t\t\t});\n    \t});\n  \t} else {\n    console.log('Service workers are not supported.');\n  }\n\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration=> {\n\t\tconsole.log('registration', registration);\n\t/* \tconsole.log('hari');\n\t\t\tregistration.showNotification(\"hello\", {\n\t\t\t   body: \"hello from hari\" \n\t\t\t}) */\n\n\t\t\tregistration.showNotification(\"Mal\", {\n\t\t\t\tbody: \"malu ddkdakad\"\n\t\t\t});\n\n/* \t\t\tsetTimeout(() => {\n\t\t\t\tregistration.showNotification(\"Mal\", {\n\t\t\t\t\tbody: \"malu ddkdakad\"\n\t\t\t\t});\n\t\t\t\tregistration.update();\n\t\t\t}, 100); */\n\t\t\n/*         return registration.pushManager.getSubscription().then((subscription)=> {\n \n        }); */\n    });\n  }\n\n/*   window.addEventListener(\"fetch\", event => {\n\t  console.log('hari');\n\t  event.waitUntil(\n\t\t  this.registration.showNotification(\"hello\", {\n\t\t\t body: \"hello from hari\" \n\t\t  })\n\t  )\n  }) */\n\n  "],"sourceRoot":""}